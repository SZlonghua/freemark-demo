<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.liaotao</groupId>
	<artifactId>freemark-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>freemark-demo</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-freemarker</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<!-- 把src/main/resources目录下所有的文件拷贝到conf目录中 -->
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>static/**</exclude>
				</excludes>
				<targetPath>${project.build.directory}/product/conf</targetPath>
			</resource>
			<!-- 把放在根目录下的脚本文件.sh,.bat拷贝到bin目录中 -->
			<resource>
				<directory>.</directory>
				<includes>
					<include>**/*.sh</include>
					<include>**/*.bat</include>
				</includes>
				<targetPath>${project.build.directory}/product</targetPath>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<outputDirectory>
						${project.build.directory}/product
					</outputDirectory>
					<archive>
						<manifest>
							<!--是否添加依赖-->
							<addClasspath>true</addClasspath>
							<!--设置启动类-->
							<mainClass>com.liaotao.freemark.FreemarkDemoApplication</mainClass>
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<!-- 把依赖的所有maven jar包拷贝到lib目录中（这样所有的jar包都在lib目录中） -->
							<outputDirectory>${project.build.directory}/product/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!--<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						&lt;!&ndash; here the phase you need &ndash;&gt;
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/product</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/target/freemark-demo-0.0.1-SNAPSHOT.jar</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>

			</plugin>-->
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<configuration>
					<attach>true</attach>
					<!-- 配置源代码jar文件的存放路径，和其他jar文件一起放在lib目录 -->
					<outputDirectory>${project.build.directory}/product/source</outputDirectory>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
